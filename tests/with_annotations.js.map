{"version":3,"sources":["source.js"],"names":[],"mappings":"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","sourceRoot":"/source/root/dir","sourcesContent":["\"use strict\";\n\n// long form\nangular.module(\"MyMod\").controller(\"MyCtrl\", function($scope, $timeout) {\n});\n\n// w/ dependencies\nangular.module(\"MyMod\", [\"OtherMod\"]).controller(\"MyCtrl\", function($scope, $timeout) {\n});\n\n// simple\nmyMod.controller(\"foo\", function($scope, $timeout) {\n});\nmyMod.service(\"foo\", function($scope, $timeout) {\n});\nmyMod.factory(\"foo\", function($scope, $timeout) {\n});\nmyMod.directive(\"foo\", function($scope, $timeout) {\n});\nmyMod.filter(\"foo\", function($scope, $timeout) {\n});\nmyMod.animation(\"foo\", function($scope, $timeout) {\n});\nmyMod.invoke(\"foo\", function($scope, $timeout) {\n});\n\n// object property\nvar myObj = {};\nmyObj.myMod = angular.module(\"MyMod\");\nmyObj.myMod.controller(\"foo\", function($scope, $timeout) { a });\n\n// no dependencies => no need to wrap the function in an array\nmyMod.controller(\"foo\", function() {\n});\nmyMod.service(\"foo\", function() {\n});\nmyMod.factory(\"foo\", function() {\n});\nmyMod.directive(\"foo\", function() {\n});\nmyMod.filter(\"foo\", function() {\n});\nmyMod.animation(\"foo\", function() {\n});\nmyMod.invoke(\"foo\", function() {\n});\n\n// run, config don't take names\nmyMod.run(function($scope, $timeout) {\n});\nangular.module(\"MyMod\").run(function($scope) {\n});\nmyMod.config(function($scope, $timeout) {\n});\nangular.module(\"MyMod\").config(function() {\n});\n\n// directive return object\nmyMod.directive(\"foo\", function($scope) {\n    return {\n        controller: function($scope, $timeout) {\n            bar;\n        }\n    }\n});\nmyMod.directive(\"foo\", function($scope) {\n    return {\n        controller: function() {\n            bar;\n        }\n    }\n});\n\n// provider, provider $get\nmyMod.provider(\"foo\", function($scope) {\n    this.$get = function($scope, $timeout) {\n        bar;\n    };\n    self.$get = function($scope) {};\n    that.$get = function($scope) {};\n    ignore.$get = function($scope) {};\n});\nmyMod.provider(\"foo\", function() {\n    this.$get = function() {\n        bar;\n    };\n});\nmyMod.provider(\"foo\", function() {\n    return {\n        $get: function($scope, $timeout) {\n            bar;\n        }};\n});\nmyMod.provider(\"foo\", function() {\n    return {\n        $get: function() {\n            bar;\n        }};\n});\nmyMod.provider(\"foo\", {\n    $get: function($scope, $timeout) {\n        bar;\n    }\n});\nmyMod.provider(\"foo\", {\n    $get: function() {\n        bar;\n    }\n});\n\n// chaining\nmyMod.directive(\"foo\", function($a, $b) {\n    a;\n}).factory(\"foo\", function() {\n        b;\n    }).config(function($c) {\n        c;\n    }).filter(\"foo\", function($d, $e) {\n        d;\n    }).animation(\"foo\", function($f, $g) {\n        e;\n    });\n\nangular.module(\"MyMod\").directive(\"foo\", function($a, $b) {\n    a;\n}).provider(\"foo\", function() {\n        return {\n            $get: function($scope, $timeout) {\n                bar;\n            }};\n    }).value(\"foo\", \"bar\")\n    .constant(\"foo\", \"bar\")\n    .bootstrap(element, [], {})\n    .factory(\"foo\", function() {\n        b;\n    }).config(function($c) {\n        c;\n    }).filter(\"foo\", function($d, $e) {\n        d;\n    }).animation(\"foo\", function($f, $g) {\n        e;\n    }).invoke(\"foo\", function($h, $i) {\n        f;\n    });\n\n// $provide\nangular.module(\"MyMod\").directive(\"foo\", function($a, $b) {\n    $provide.decorator(\"foo\", function($scope, $timeout) {\n        a;\n    });\n    $provide.factory(\"bar\", function($timeout, $scope) {\n        b;\n    });\n    $provide.animation(\"baz\", function($scope, $timeout) {\n        c;\n    });\n});\n\n\n// all the patterns below matches only when we're inside a detected angular module\nangular.module(\"MyMod\").directive(\"pleasematchthis\", function() {\n\n    // $httpProvider\n    $httpProvider.interceptors.push(function($scope) { a });\n    $httpProvider.responseInterceptors.push(function($scope) { a }, function(a, b) { b }, function() { c });\n\n    // $routeProvider\n    $routeProvider.when(\"path\", {\n        controller: function($scope) { a }\n    }).when(\"path2\", {\n            controller: function($scope) { b },\n            resolve: {\n                zero: function() { a },\n                more: function($scope, $timeout) { b },\n                something: \"else\",\n            },\n            dontAlterMe: function(arg) {},\n        });\n\n    // ui-router\n    $stateProvider.state(\"myState\", {\n        resolve: {\n            simpleObj: function() { a },\n            promiseObj: function($scope, $timeout) { b },\n            translations: \"translations\",\n        },\n        views: {\n            viewa: {\n                controller: function($scope, myParam) {},\n                controllerProvider: function($stateParams) {},\n                templateProvider: function($scope) {},\n                dontAlterMe: function(arg) {},\n                resolve: {\n                    myParam: function($stateParams) {\n                        return $stateParams.paramFromDI;\n                    }\n                },\n            },\n            viewb: {\n                dontAlterMe: function(arg) {},\n                templateProvider: function($scope) {},\n                controller: function($scope) {},\n            },\n            dontAlterMe: null,\n        },\n        controller: function($scope, simpleObj, promiseObj, translations) { c },\n        controllerProvider: function($scope) { g },\n        templateProvider: function($scope) { h },\n        onEnter: function($scope) { d },\n        onExit: function($scope) { e },\n        dontAlterMe: function(arg) { f },\n    }).state(\"myState2\", {\n            controller: function($scope) {},\n        }).state({\n            name: \"myState3\",\n            controller: function($scope, simpleObj, promiseObj, translations) { c },\n        });\n    $urlRouterProvider.when(\"/\", function($match) { a; });\n    $urlRouterProvider.otherwise(\"\", function(a) { a; });\n    $urlRouterProvider.rule(function(a) { a; }).anything().when(\"/\", function($location) { a; });\n\n    // angular ui / ui-bootstrap $modal\n    $modal.open({\n        templateUrl: \"str\",\n        controller: function($scope) {},\n        resolve: {\n            items: function(MyService) {},\n            data: function(a, b) {},\n            its: 42,\n        },\n        donttouch: function(me) {},\n    });\n});\n\n// none of the patterns below matches because they are not in an angular module context\n// this should be a straight copy of the code above, with identical copies in\n// with_annotations(_single).js\nfoobar.irrespective(\"dontmatchthis\", function() {\n\n    // $httpProvider\n    $httpProvider.interceptors.push(function($scope) { a });\n    $httpProvider.responseInterceptors.push(function($scope) { a }, function(a, b) { b }, function() { c });\n\n    // $routeProvider\n    $routeProvider.when(\"path\", {\n        controller: function($scope) { a }\n    }).when(\"path2\", {\n            controller: function($scope) { b },\n            resolve: {\n                zero: function() { a },\n                more: function($scope, $timeout) { b },\n                something: \"else\",\n            },\n            dontAlterMe: function(arg) {},\n        });\n\n    // ui-router\n    $stateProvider.state(\"myState\", {\n        resolve: {\n            simpleObj: function() { a },\n            promiseObj: function($scope, $timeout) { b },\n            translations: \"translations\",\n        },\n        views: {\n            viewa: {\n                controller: function($scope, myParam) {},\n                controllerProvider: function($stateParams) {},\n                templateProvider: function($scope) {},\n                dontAlterMe: function(arg) {},\n                resolve: {\n                    myParam: function($stateParams) {\n                        return $stateParams.paramFromDI;\n                    }\n                },\n            },\n            viewb: {\n                dontAlterMe: function(arg) {},\n                templateProvider: function($scope) {},\n                controller: function($scope) {},\n            },\n            dontAlterMe: null,\n        },\n        controller: function($scope, simpleObj, promiseObj, translations) { c },\n        controllerProvider: function($scope) { g },\n        templateProvider: function($scope) { h },\n        onEnter: function($scope) { d },\n        onExit: function($scope) { e },\n        dontAlterMe: function(arg) { f },\n    }).state(\"myState2\", {\n            controller: function($scope) {},\n        }).state({\n            name: \"myState3\",\n            controller: function($scope, simpleObj, promiseObj, translations) { c },\n        });\n    $urlRouterProvider.when(\"/\", function($match) { a; });\n    $urlRouterProvider.otherwise(\"\", function(a) { a; });\n    $urlRouterProvider.rule(function(a) { a; }).anything().when(\"/\", function($location) { a; });\n\n    // angular ui / ui-bootstrap $modal\n    $modal.open({\n        templateUrl: \"str\",\n        controller: function($scope) {},\n        resolve: {\n            items: function(MyService) {},\n            data: function(a, b) {},\n            its: 42,\n        },\n        donttouch: function(me) {},\n    });\n});\n\n// explicit annotations\nvar x = /* @ngInject */ function($scope) {\n};\n\nvar obj = {};\nobj.bar = /*@ngInject*/ function($scope) {};\n\nobj = {\n    controller: /*@ngInject*/ function($scope) {},\n};\n\nobj = /*@ngInject*/ {\n    foo: function(a) {},\n    bar: function(b, c) {},\n    val: 42,\n    inner: {\n        circle: function(d) {},\n        alalalala: \"long\",\n    },\n    nest: { many: {levels: function(x) {}}},\n    but: { onlythrough: [\"object literals\", {donttouch: function(me) {}}]},\n};\n\n// @ngInject\nfunction foo($scope) {\n}\n\n// @ngInject\n// otherstuff\nfunction Foo($scope) {\n}\n\n// @ngInject\n// has trailing semicolon\nvar foo = function($scope) {\n};\n\n// @ngInject\n// lacks trailing semicolon\nvar foo = function($scope) {\n}\n\n// @ngInject\n// has trailing semicolon\nbar.foo = function($scope) {\n};\n\n// @ngInject\n// lacks trailing semicolon\nbar.foo = function($scope) {\n}\n\n// let's zip-zag indentation to make sure that the $inject array lines up properly\n    // @ngInject\n    function foo($scope) {}\n        // @ngInject\n        function foo($scope) {\n        }\n/* @ngInject */ function foo($scope) {}\n            /* @ngInject */ function foo($scope) {\n            }\n\n    // @ngInject\n    var foo = function($scope) {\n    };\n        // @ngInject\n        var foo = function($scope) {};\n// @ngInject\nvar foo = function($scope) {\n}\n            // @ngInject\n            var foo = function($scope) {}\n\n    /* @ngInject */ var foo = function($scope) {\n    };\n        /* @ngInject */var foo = function($scope) {};\n/* @ngInject */var foo = function($scope) {\n}\n            /* @ngInject */var foo = function($scope) {}\n\n\n// adding an explicit annotation where it isn't needed should work fine\nmyMod.controller(\"foo\", /*@ngInject*/ function($scope, $timeout) {\n});\n\n\n\n// snippets that shouldn't fool ng-annotate into generating false positives,\n//   whether we're inside an angular module or not\nmyMod.controller(\"donttouchme\", function() {\n    // lo-dash regression that happened in the brief time frame when\n    // notes (instad of \"notes\") would match. see issue #22\n    var notesForCurrentPage = _.filter(notes, function (note) {\n        return note.page.uid === page.uid;\n    });\n});\n"]}